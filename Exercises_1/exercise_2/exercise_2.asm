IN 10H ;disable memory protection :)
MVI B,01H ;arxikopoihsh B 

START:

LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 01H ;IS THE LSB OF DIP SWITCHES 1?
JNZ TO_LEFT ;IF LSB IS 1, GO TO TO_LEFT->TO_RIGHT->TO_LEFT
JZ CIRCULAR ;IF LSB IS 0 GO TO circular



TO_LEFT:
LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 01H ;IS THE LSB OF DIP SWITCHES 1?
JZ CIRCULAR ;IF LSB IS 0 GO TO circular

MOV A,B ;MOVE THE VALUE OF B INTO A
CMA ;COMPLEMENT A BECAUSE OF REVERSE LOGIC IN LEDS
STA 3000H ;STORE THE VALUE OF A INTO LEDS
CMA

PUSH B 
LXI B,0280H
CALL DELB
POP B

CPI 80H ;IS THE VALUE OF A 1000 0000?
JZ TO_RIGHT 
RLC ;ROTATE LEFT (SHIFT LEFT TO NEXT LED)
MOV B,A ;MOVE THE VALUE OF A INTO B 

LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 02H ;IS THE LSB OF DIP SWITCHES 1?
JNZ PAUSE ;IF 2ND LSB IS 1 GO TO PAUSE

JMP TO_LEFT ;JUMP TO TO_LEFT

TO_RIGHT:
LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 01H ;IS THE LSB OF DIP SWITCHES 1?
JZ CIRCULAR ;IF LSB IS 0 GO TO circular

MOV A,B ;MOVE THE VALUE OF B INTO A 
RRC ;
CMA 
STA 3000H
CMA 

PUSH B 
LXI B,0280H
CALL DELB
POP B

CPI 01H
JZ TO_LEFT
MOV B,A 

LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 02H ;IS THE LSB OF DIP SWITCHES 1?
JNZ PAUSE ;IF 2ND LSB IS 1 GO TO PAUSE

JMP TO_RIGHT

CIRCULAR:
LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 01H ;IS THE LSB OF DIP SWITCHES 1?
JNZ TO_LEFT ;IF NOT GO TO_LEFT 

MOV A,B ;Move the value of B INTO A 
CMA ;COMPLEMENT A BECAUSE OF REVERSE LOGIC IN LEDS
STA 3000H ;STORE THE VALUE OF A INTO LEDS
CMA ;COMPLEMENT A AGAIN TO GET THE ORIGINAL VALUE OF A

PUSH B 
LXI B,0280H
CALL DELB
POP B

CPI 80H ;IS THE VALUE OF A 1000 0000?
JZ SET_B ;SET A 01H TO CONTINUE IN CIRCULAR MOTION
RLC ;ROTATE LEFT (SHIFT LEFT TO NEXT LED)
MOV B,A ;MOVE THE VALUE OF A INTO B

LDA 2000H ;LOAD THE VALUE OF 2000H INTO THE ACCUMULATOR
ANI 02H ;IS THE LSB OF DIP SWITCHES 1?
JNZ PAUSE ;IF 2ND LSB IS 1 GO TO PAUSE

JMP CIRCULAR ;JUMP TO CIRCULAR TO CONTINUE LOOP

SET_B:
MVI B,01H ;SET A TO 01H
JMP CIRCULAR

DELAY: ;DELAY FOR 0.5 SECONDS
LXI B,0280H ;LOAD B WITH 500H
CALL DELB ;CALL DELAY SUBROUTINE
RET ;GO BACK TO MAIN PROGRAM

PAUSE:
MOV A,B        
CMA            
STA 3000H       
LDA 2000H      
ANI 02H        
JZ END_PAUSE    
JMP PAUSE 

END_PAUSE:
JMP START

END